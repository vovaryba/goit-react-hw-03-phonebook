{"version":3,"sources":["components/Filter/Filter.module.css","components/Contact/Contact.js","components/ContactsList/ContactsList.js","components/Form/Form.js","components/Filter/Filter.js","App.js","index.js","components/Contact/Contact.module.css","components/Form/Form.module.css"],"names":["module","exports","Contact","id","name","number","onDeleteContact","className","s","li","button","onClick","ContactsList","contacts","map","Form","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","checkUnic","props","onSubmit","reset","onCheckUnique","this","form","onChange","type","input","pattern","title","required","Component","Filter","App","filter","addContact","data","contact","uuidv4","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","handleCheckUnique","isExistContact","find","alert","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,wB,mKCsBXC,EAnBC,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,gBACnC,OACE,qBAAIC,UAAWC,IAAEC,GAAjB,UACE,uBAAMF,UAAWC,IAAEJ,KAAnB,UAA0BA,EAA1B,OACA,sBAAMG,UAAWC,IAAEH,OAAnB,SAA4BA,IAC5B,wBAAQE,UAAWC,IAAEE,OAAQC,QAAS,kBAAML,EAAgBH,IAA5D,wBCiBSS,EArBM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUP,EAAsB,EAAtBA,gBAChC,OACE,6BACGO,EAASC,KAAI,gBAAGX,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAEEF,GAAIA,EACJC,KAAMA,EACNC,OAAQA,EACRC,gBAAiBA,GAJZH,S,wBC8DAY,E,4MApEbC,MAAQ,CACNZ,KAAM,GACNC,OAAQ,I,EAGVY,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGjB,EAAOgB,K,EAIZE,aAAe,SAAAJ,GACbA,EAAEK,iBACiB,EAAKC,cAExB,EAAKC,MAAMC,SAAS,EAAKV,OACzB,EAAKW,U,EAGPA,MAAQ,WACN,EAAKN,SAAS,CAAEjB,KAAM,GAAIC,OAAQ,M,EAGpCmB,UAAY,WACV,IAAQpB,EAAS,EAAKY,MAAdZ,KAER,OAAOwB,EADmB,EAAKH,MAAvBG,eACaxB,I,4CAGvB,WACE,MAAyByB,KAAKb,MAAtBZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAME,UAAWC,IAAEsB,KAAMJ,SAAUG,KAAKP,aAAxC,UACE,yCAEE,uBACEF,MAAOhB,EACP2B,SAAUF,KAAKZ,aACfe,KAAK,OACL5B,KAAK,OACLG,UAAWC,IAAEyB,MACbC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEhB,MAAOf,EACP0B,SAAUF,KAAKZ,aACfe,KAAK,MACL5B,KAAK,SACLG,UAAWC,IAAEyB,MACbC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQ7B,UAAWC,IAAEE,OAAQsB,KAAK,SAAlC,gC,GA7DWK,a,iBCqBJC,EApBA,SAAC,GAAyB,IAAvBlB,EAAsB,EAAtBA,MAAOW,EAAe,EAAfA,SACvB,OACE,0DAEE,uBACEX,MAAOA,EACPW,SAAUA,EACVC,KAAK,OACL5B,KAAK,OACLG,UAAWC,IAAEyB,YCuENM,E,4MA7EbvB,MAAQ,CACNH,SAAU,GACV2B,OAAQ,I,EAkBVC,WAAa,SAAAC,GACX,IAAMC,EAAU,CACdxC,GAAIyC,cACJxC,KAAMsC,EAAKtC,KACXC,OAAQqC,EAAKrC,QAEf,EAAKgB,UAAS,gBAAGR,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAE8B,GAAH,mBAAe9B,S,EAI3BgC,cAAgB,SAAAC,GACd,EAAKzB,UAAS,SAAA0B,GAAS,MAAK,CAC1BlC,SAAUkC,EAAUlC,SAAS2B,QAAO,SAAAG,GAAO,OAAIA,EAAQxC,KAAO2C,U,EAIlEE,aAAe,SAAA9B,GACb,EAAKG,SAAS,CAAEmB,OAAQtB,EAAEC,cAAcC,S,EAG1C6B,mBAAqB,WACnB,MAA6B,EAAKjC,MAA1BwB,EAAR,EAAQA,OAAQ3B,EAAhB,EAAgBA,SACVqC,EAAmBV,EAAOW,cAChC,OAAOtC,EAAS2B,QAAO,SAAAG,GAAO,OAC5BA,EAAQvC,KAAK+C,cAAcC,SAASF,O,EAIxCG,kBAAoB,SAAAjD,GAClB,IACMkD,IADe,EAAKtC,MAAlBH,SAC0B0C,MAAK,SAAAZ,GAAO,OAAIA,EAAQvC,OAASA,KAEnE,OADAkD,GAAkBE,MAAMpD,EAAO,6BACvBkD,G,uDAhDV,WACE,IAAMzC,EAAW4C,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMhD,GAC9B8C,GACF9B,KAAKR,SAAS,CAAER,SAAU8C,M,gCAI9B,SAAmBG,EAAWf,GAC5B,IAAQlC,EAAagB,KAAKb,MAAlBH,SACJA,IAAakC,EAAUlC,UACzB4C,aAAaM,QAAQ,WAAYH,KAAKI,UAAUnD,M,oBAwCpD,WACE,IAAQ2B,EAAWX,KAAKb,MAAhBwB,OACFyB,EAAkBpC,KAAKoB,qBAC7B,OACE,qCACE,2CACA,cAAC,EAAD,CACEvB,SAAUG,KAAKY,WACfb,cAAeC,KAAKwB,oBAEtB,0CACA,cAAC,EAAD,CAAQjC,MAAOoB,EAAQT,SAAUF,KAAKmB,eACtC,cAAC,EAAD,CACEnC,SAAUoD,EACV3D,gBAAiBuB,KAAKgB,uB,GAvEdR,a,MCFlB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BtE,EAAOC,QAAU,CAAC,GAAK,oBAAoB,KAAO,sBAAsB,OAAS,wBAAwB,OAAS,0B,kBCAlHD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,wB","file":"static/js/main.36d3aa98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__38Z-u\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nconst Contact = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.li}>\r\n      <span className={s.name}>{name}:</span>\r\n      <span className={s.number}>{number}</span>\r\n      <button className={s.button} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Contact from '../Contact';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <Contact\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from 'react';\r\nimport s from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const isUnicName = this.checkUnic();\r\n    if (!isUnicName) return;\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  checkUnic = () => {\r\n    const { name } = this.state;\r\n    const { onCheckUnique } = this.props;\r\n    return onCheckUnique(name);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={s.input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={s.input}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactsList from './components/ContactsList';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = data => {\n    const contact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  handleCheckUnique = name => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert(name + ' is already in contacts.');\n    return !isExistContact;\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <Form\n          onSubmit={this.addContact}\n          onCheckUnique={this.handleCheckUnique}\n        />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Contact_li__2I5q-\",\"name\":\"Contact_name__1Fo79\",\"number\":\"Contact_number__3_3eJ\",\"button\":\"Contact_button__3EZ6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1bxQu\",\"input\":\"Form_input__1xt3E\",\"button\":\"Form_button__2HqLY\"};"],"sourceRoot":""}